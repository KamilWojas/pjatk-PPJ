interface PojazdInfo {
    void pokazInformacje();
}


interface Silnikowy {
    void uruchomSilnik();
}

class Pojazd implements PojazdInfo {
    private int maksymalnaPrÄ™dkoÅ›Ä‡;

    public Pojazd(int maksymalnaPrÄ™dkoÅ›Ä‡) {
        this.maksymalnaPrÄ™dkoÅ›Ä‡ = maksymalnaPrÄ™dkoÅ›Ä‡;
    }

    public int getMaksymalnaPrÄ™dkoÅ›Ä‡() {
        return maksymalnaPrÄ™dkoÅ›Ä‡;
    }

    @Override
    public void pokazInformacje() {
        System.out.println("Pojazd: maksymalna prÄ™dkoÅ›Ä‡ = " + maksymalnaPrÄ™dkoÅ›Ä‡ + " km/h");
    }
}
class SamochÃ³d extends Pojazd implements Silnikowy {
    private int liczbaDrzwi;

    public SamochÃ³d(int maksymalnaPrÄ™dkoÅ›Ä‡, int liczbaDrzwi) {
        super(maksymalnaPrÄ™dkoÅ›Ä‡);
        this.liczbaDrzwi = liczbaDrzwi;
    }

    @Override
    public void pokazInformacje() {
        System.out.println("SamochÃ³d: maksymalna prÄ™dkoÅ›Ä‡ = " + getMaksymalnaPrÄ™dkoÅ›Ä‡() + " km/h, liczba drzwi = " + liczbaDrzwi);
    }

    @Override
    public void uruchomSilnik() {
        System.out.println("Silnik samochodu uruchomiony! ğŸ”¥ğŸš—");
    }
}

class Motocykl extends Pojazd implements Silnikowy {
    private String typKierownicy;




}